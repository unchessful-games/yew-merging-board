# This is a basic workflow to help you get started with Actions

name: CI/CD

permissions:
  contents: read
  pages: write
  id-token: write


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          profile: minimal
      - name: Install trunk
        uses: jetli/trunk-action@v0.1.0
        with:
          version: 'latest'
          
      - name: Cache Rust dependencies
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-rust-deps
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2

      - name: Build
        run: trunk build --release
        working-directory: ./demo

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload "dist" directory
          path: 'demo/dist'


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1